////////////////////////////////////////////////////////////////////////////////
// Подсистема "Обработка событий (EventHUB)". (Глобальные обработчики)
//
////////////////////////////////////////////////////////////////////////////////


#Область ОбработкаСобытий

// Процедура - Глобальный обработчик ожидания, выполняет выборку зарегистрированных обработчиков событий,
// для обработки на клиенте.
// Для каждого обработчика выполняется вызов оповещения о событии.
//
Процедура ОбработкаОжиданияСобытийНаКлиенте() Экспорт
	
	ОбработчикиСобытий = ктв_сб_СобытияВызовСервера.ПолучитьОбработчикиСобытийДляВыполненияНаКлиенте();
	
	Для Каждого ТекОписаниеСобытия Из ОбработчикиСобытий Цикл
		
		ПараметрыОповещения = Новый Структура("Ид,
											  |ТочкаВозникновения,
											  |Дата,
											  |Момент,
											  |Событие,
											  |Источник,
											  |Пользователь,
											  |Параметры,
											  |Обработчик");
		ЗаполнитьЗначенияСвойств(ПараметрыОповещения, ТекОписаниеСобытия);
		
		
		Оповестить("ктв_сб_Событие", ПараметрыОповещения, ПараметрыОповещения.Источник);
		
	КонецЦикла;
	
КонецПроцедуры //ОбработкаОжиданияСобытийНаКлиенте()

// Процедура - Глобальный обработчик оповещения, выполняет обработку событий
//
// Параметры:
//  ИмяСобытия	 - Строка		 - Служебный реквизит, всегда = "ктв_сб_Событие"
//  Параметр	 - Структура	 - Описание события и обработчика события
//  	Ид					- Строка(36)		- Идентификатор возникшего события (экземпляра события)
//  	ТочкаВозникновения	- СправочникСсылка	- Точка возникновения события
//  	Дата				- Дата				- Дата возникновения события
//  	Момент				- Число				- Момент возникновения события (msec)
//  	Событие				- СправочникСсылка	- Элемент справочника "События" (обрабатываемое событие)
//  	Источник			- СправочникСсылка	- Идентификатор объкета метаданных или точка возникновения, с которыми связано событие
//  	Пользователь		- СправочникСсылка	- Пользователь, для которого необходимо выполнить обработку события
//  	Параметры			- Структура			- Параметры возникшего события
//  	Обработчик			- СправочникСсылка	- Элемент справочника "Обработчики событий"
//  Источник	 - СправочникСсылка.			- Идентификатор объкета метаданных или точка возникновения, с которыми связано событие
//					ИдентификаторыОбъектовМетаданных,
//					ктв_сб_СобытияТочкиВозникновения
//
Процедура ОбработкаСобытийНаКлиенте(ИмяСобытия, Параметр, Источник) Экспорт
	
	Если НЕ ИмяСобытия = "ктв_сб_Событие" Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ТипЗнч(Параметр) = Тип("Структура") Тогда
		Возврат;
	Конецесли;
	
	Если НЕ Параметр.Свойство("Обработчик") Тогда
		Возврат;
	Конецесли;
	
	Ошибка = Ложь;
	ТекстОшибки = "";
	
	ОписаниеОбработчика = ктв_сб_СобытияВызовСервера.ПолучитьОписаниеОбработчикаСобытий(Параметр.Обработчик);
	
	ИмяОбработки = "ОбработкаСобытия_" + СтрЗаменить(ОписаниеОбработчика.Ид, "-", "_");
	
	АдресОбработки = ?(ОписаниеОбработчика.ОбработкаВнешняя,
					   ПолучитьНавигационнуюСсылку(Параметр.Обработчик, "Обработка"),
					   ОписаниеОбработчика.ОбработкаИмяВстроенной);
					   
	ПараметрыФормы = Новый Структура("ОбработкаНастройкиАдресВХранилище", ПоместитьВоВременноеХранилище(ОписаниеОбработчика.ОбработкаНастройки, Новый УникальныйИдентификатор()));
	ФормаОбработчикаСобытия = ктв_сб_ОбработкиОбслуживанияКлиент.ПолучитьФормуОбработкиОбслуживания(АдресОбработки, ИмяОбработки, , ПараметрыФормы);
	
	Попытка
		Результат = Неопределено;
		
		Выполнить("Результат = ФормаОбработчикаСобытия.ОбработатьСобытие(Параметр.ТочкаВозникновения, Параметр.Ид, Источник, Параметр.Дата, Параметр.Момент, Параметр.Событие, Параметр.Обработчик, Параметр.Параметры);");
		
		Если Параметр.Параметры.Свойство("ТекстОшибки") Тогда
			ТекстОшибки = Параметр.Параметры.ТекстОшибки;
		КонецЕсли;
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Если Параметр.Параметры.Свойство("ТекстОшибки") Тогда
			Параметр.Параметры.ТекстОшибки = Параметр.Параметры.ТекстОшибки + Символы.ПС + ТекстОшибки;
		Иначе
			Параметр.Параметры.Вставить("ТекстОшибки", ТекстОшибки);
		КонецЕсли;
	КонецПопытки;
	
	ктв_сб_СобытияВызовСервера.ЗаписатьРезультатОбработкиСобытияНаКлиенте(Параметр.ТочкаВозникновения
																	 , Параметр.Ид
																	 , Параметр.Событие
																	 , Параметр.Обработчик
																	 , ктв_сб_СобытияВызовСервера.ТекущийПользователь()
																	 , Результат
																	 , (НЕ ТекстОшибки = "")
																	 , ТекстОшибки);
	
КонецПроцедуры //ОбработкаСобытийНаКлиенте()

#КонецОбласти
