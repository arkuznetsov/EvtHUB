
&НаСервереБезКонтекста
Процедура ЗарегистрироватьСобытиеНаСервере(Событие, Источник, Обработчик = Неопределено)
	
	ИдОбъектаМетаданных = ктв_сб_События.ПолучитьИдентификаторОбъектаМетаданных(ТипЗнч(Источник));
	
	СобытияДляПроверки = ктв_сб_События.ПолучитьОбработчикиСобытий(ИдОбъектаМетаданных, Событие);
	
	Для Каждого ТекСобытие Из СобытияДляПроверки Цикл
	
		ЕстьАктивныеОбработчики = Ложь;
		
		Для Каждого ТекОбработчик Из ТекСобытие.Значение Цикл
			Если ЗначениеЗаполнено(Обработчик) И НЕ ТекОбработчик.Обработчик = Обработчик Тогда
				Продолжить;
			КонецЕсли;
			Если ТекОбработчик.ОбрабатыватьНаСервере ИЛИ ТекОбработчик.ОбрабатыватьНаКлиенте Тогда
				ЕстьАктивныеОбработчики = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ ЕстьАктивныеОбработчики Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыСобытия = Новый Структура();
		//Передаем ссылку на источник события вместе с параметрами события, если он является ссылочным типом.
		//В обработчике проверки возникновения события ссылка может быть переопределена
		ВремИсточник = Неопределено;
		Попытка
			ВремИсточник = Источник.Ссылка;
		Исключение
		КонецПопытки;
		ПараметрыСобытия.Вставить("Источник", ВремИсточник);
		
		//Передаем текущего пользователя вместе с параметрами события.
		//В обработчике проверки возникновения события пользователь может быть переопределен
		ПараметрыСобытия.Вставить("Пользователь", ктв_сб_События.ТекущийПользователь());
		
		ТекстОшибки = "";
		
		ТочкаВозникновения = Справочники.ктв_сб_СобытияТочкиВозникновения.ЭтаИБ;
		ИдСобытия = СокрЛП(Новый УникальныйИдентификатор());
		ДатаСобытия = ТекущаяУниверсальнаяДата();
		МоментСобытия = ТекущаяУниверсальнаяДатаВМиллисекундах();
		
		ктв_сб_События.НачатьОбработкуСобытия(ТочкаВозникновения
										 , ИдСобытия
										 , ИдОбъектаМетаданных
										 , ПараметрыСобытия.Источник
										 , ДатаСобытия
										 , МоментСобытия
										 , ТекСобытие.Ключ
										 , ПараметрыСобытия.Пользователь
										 , ТекСобытие.Значение
										 , ПараметрыСобытия
										 , ТекстОшибки);
							   
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьСобытие(Команда)
	ЗарегистрироватьСобытиеНаСервере(Событие, ИсточникСобытия, ОбработчикСобытия);
КонецПроцедуры
