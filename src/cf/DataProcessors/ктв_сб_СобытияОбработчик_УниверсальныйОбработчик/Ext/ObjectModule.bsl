#Область ПрограммныйИнтерфейс

// Функция - Подтверждает, что обработка является обработкой обслуживания
// 
// Возвращаемое значение:
//  Булево - Истина
//
Функция ЭтоОбработкаВыполненияОбработчика() Экспорт
	
	Возврат Истина;
	
КонецФункции //ЭтоОбработкаВыполненияОбработчика()

// Функция - Получает форму обработчиков команд, где расположены процедуры-обработчики команд
// 			 из списка действий кнопки открытия поля выбора обработки обслуживания
// 
// Возвращаемое значение:
//  Строка - Имя формы обработчиков комманд
//
Функция ПолучитьФормуОбработчиковКоманд() Экспорт
	
	Возврат "Форма";
	
КонецФункции //ПолучитьФормуОбработчиковКоманд()

// Функция - Получает список действий кнопки открытия поля выбора обработки обслуживания
// 
// Возвращаемое значение:
//  СписокЗначений - Список действий
//
Функция ПолучитьСписокДействийКнопкиОткрытия() Экспорт
	
	СписокДействий = Новый СписокЗначений();
	
	Возврат СписокДействий;
	
КонецФункции //ПолучитьСписокДействийКнопкиОткрытия()

// Функция - Выполняет обработчик события
//
// Параметры:
//  ТочкаВозникновения	 - СправочникСсылка.ктв_сб_СобытияТочкиВозникновения	- Точка (ИБ), где возникло событие
//  ИдСобытия			 - Строка											- Уникальный идентификатор события
//  Источник			 - ЛюбаяСсылка										- Источник возникновения события
//  Дата				 - Дата												- Дата и время возникновения события
//  Момент				 - Число											- Момет возникновения события в миллисекундах
//  Событие				 - СправочникСсылка.ктв_сб_События						- Возникшее событие
//  Обработчик			 - СправочникСсылка.ктв_сб_СобытияОбработчики			- Обработчик события
//  ПараметрыСобытия	 - Структура										- Параметры, сформированные при возникновении события
// 
// Возвращаемое значение:
//  Булево - Истина - Обработка выполнена успешно, Ложь - в противном случае
//
Функция ОбработатьСобытие(ТочкаВозникновения
						, ИдСобытия
						, Источник
						, Дата
						, Момент
						, Событие
						, Обработчик
						, ПараметрыСобытия) Экспорт
	
	ИмяПоляНастройки_Код = "ОбработкаНаСервере_Код";
	
	Результат = Ложь;
	
	Настройка = Обработчик.ОбработкаНастройки.Получить();
	
	Если НЕ ТипЗнч(Настройка) = Тип("Структура") Тогда
		ТекстОшибки = "Не указаны настройки обработчика события """ + СокрЛП(Обработчик) + """!";
		Возврат Результат;
	КонецЕсли;
	
	ИсполняемыйКод = "";
	Если НЕ Настройка.Свойство(ИмяПоляНастройки_Код, ИсполняемыйКод) Тогда
		ТекстОшибки = "В настройках обработчика события """ + СокрЛП(Обработчик) + """ отсутствует поле """ + СокрЛП(ИмяПоляНастройки_Код) + """!";
		Возврат Результат;
	КонецЕсли;
	
	Если ИсполняемыйКод = "" Тогда
		Возврат Результат;
	КонецЕсли;
	
	Попытка
		Выполнить(ИсполняемыйКод);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции //ОбработатьСобытие()

// Функция - Получает список пользователей, для которых должна быть выполнена обработка на клиенте
//
// Параметры:
//  ТочкаВозникновения	 - СправочникСсылка.ктв_сб_СобытияТочкиВозникновения	- Точка (ИБ), где возникло событие
//  ИдСобытия			 - Строка											- Уникальный идентификатор события
//  Источник			 - ЛюбаяСсылка										- Источник возникновения события
//  Дата				 - Дата												- Дата и время возникновения события
//  Момент				 - Число											- Момет возникновения события в миллисекундах
//  Событие				 - СправочникСсылка.ктв_сб_События						- Возникшее событие
//  Обработчик			 - СправочникСсылка.ктв_сб_СобытияОбработчики			- Обработчик события
//  ПараметрыСобытия	 - Структура										- Параметры, сформированные при возникновении события
// 
// Возвращаемое значение:
//  Массив - Массив пользователей
//
Функция ПолучитьПользователей(ТочкаВозникновения
							, ИдСобытия
							, Источник
							, Дата
							, Момент
							, Событие
							, Обработчик
							, ПараметрыСобытия) Экспорт
	
	ИмяПоляНастройки_Код = "ОбработкаПолучениеПользователей_Код";
	
	Результат = Новый Массив();
	
	Настройка = Обработчик.ОбработкаНастройки.Получить();
	
	Если НЕ ТипЗнч(Настройка) = Тип("Структура") Тогда
		ТекстОшибки = "Не указаны настройки обработчика события """ + СокрЛП(Обработчик) + """!";
		Возврат Результат;
	КонецЕсли;
	
	ИсполняемыйКод = "";
	Если НЕ Настройка.Свойство(ИмяПоляНастройки_Код, ИсполняемыйКод) Тогда
		ТекстОшибки = "В настройках обработчика события """ + СокрЛП(Обработчик) + """ отсутствует поле """ + СокрЛП(ИмяПоляНастройки_Код) + """!";
		Возврат Результат;
	КонецЕсли;
	
	Если ИсполняемыйКод = "" Тогда
		Возврат Результат;
	КонецЕсли;
	
	Попытка
		Выполнить(ИсполняемыйКод);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции //ОбработатьСобытие()

#КонецОбласти

#Область СлужебныеПроцедуры

#КонецОбласти
