
#Область ПрограммныйИнтерфейс

// Функция - Подтверждает, что обработка является обработкой обслуживания
// 
// Возвращаемое значение:
//  Булево - Истина
//
Функция ЭтоОбработкаВыполненияОбработчика() Экспорт
	
	Возврат Истина;
	
КонецФункции //ЭтоОбработкаВыполненияОбработчика()

// Функция - Получает форму обработчиков команд, где расположены процедуры-обработчики команд
// 			 из списка действий кнопки открытия поля выбора обработки обслуживания
// 
// Возвращаемое значение:
//  Строка - Имя формы обработчиков комманд
//
Функция ПолучитьФормуОбработчиковКоманд() Экспорт
	
	Возврат "Форма";
	
КонецФункции //ПолучитьФормуОбработчиковКоманд()

// Функция - Получает список действий кнопки открытия поля выбора обработки обслуживания
// 
// Возвращаемое значение:
//  СписокЗначений - Список действий
//
Функция ПолучитьСписокДействийКнопкиОткрытия() Экспорт
	
	СписокДействий = Новый СписокЗначений();
	СписокДействий.Добавить("ВыполнитьКоманду_ЗарегистрироватьИзменения(Неопределено)", "Зарегистрировать изменения", , БиблиотекаКартинок.ПланОбмена);
	СписокДействий.Добавить("ВыполнитьКоманду_ВыгрузитьДанные(Неопределено)", "Выгрузить данные", , БиблиотекаКартинок.ЗаписатьИзменения);
	СписокДействий.Добавить("ВыполнитьКоманду_ВыгрузитьСкриптыВФайлы(Неопределено)", "Выгрузить скрипты в файлы...", , БиблиотекаКартинок.Задача);
	СписокДействий.Добавить("ОткрытьФорму_Форма", "Настройка...", , БиблиотекаКартинок.ИзменитьФорму);
	
	Возврат СписокДействий;
	
КонецФункции //ПолучитьСписокДействийКнопкиОткрытия()

// Функция - Выполняет обработчик события
//
// Параметры:
//  ТочкаВозникновения	 - СправочникСсылка.ктв_сб_СобытияТочкиВозникновения	- Точка (ИБ), где возникло событие
//  ИдСобытия			 - Строка											- Уникальный идентификатор события
//  Источник			 - ЛюбаяСсылка										- Источник возникновения события
//  Дата				 - Дата												- Дата и время возникновения события
//  Момент				 - Число											- Момет возникновения события в миллисекундах
//  Событие				 - СправочникСсылка.ктв_сб_События						- Возникшее событие
//  Обработчик			 - СправочникСсылка.ктв_сб_СобытияОбработчики			- Обработчик события
//  ПараметрыСобытия	 - Структура										- Параметры, сформированные при возникновении события
// 
// Возвращаемое значение:
//  Булево - Истина - Обработка выполнена успешно, Ложь - в противном случае
//
Функция ОбработатьСобытие(ТочкаВозникновения
						, ИдСобытия
						, Источник
						, Дата
						, Момент
						, Событие
						, Обработчик
						, ПараметрыСобытия) Экспорт
	
	Если НЕ ТипЗнч(ПараметрыСобытия) = Тип("Структура") Тогда
		ПараметрыСобытия = Новый Структура();
	КонецЕсли;
	
	ПараметрыСобытия.Вставить("ПредставлениеИсточника", СокрЛП(Источник));
	
	Настройка = Обработчик.ОбработкаНастройки.Получить();
	Если НЕ ТипЗнч(Настройка) = Тип("Структура") Тогда
		ПараметрыСобытия.Вставить("ТекстОшибки", "Не заданы настройки обработчика событий!");
		Возврат Ложь;
	КонецЕсли;
	
	НастройкаСоединения = Неопределено;
	Если НЕ Настройка.Свойство("НастройкаСоединения", НастройкаСоединения) Тогда
		ПараметрыСобытия.Вставить("ТекстОшибки", "Не указана настройка соединения с MS SQL Server!");
		Возврат Ложь;
	КонецЕсли;
	
	ТаблицаДляОбновления = "";
	Если НЕ Настройка.Свойство("ИмяТаблицыСУБД", ТаблицаДляОбновления) Тогда
		ПараметрыСобытия.Вставить("ТекстОшибки", "Не указана таблица СУБД для обновления!");
		Возврат Ложь;
	КонецЕсли;
	
	СоответствиеКолонок = "";
	Если НЕ Настройка.Свойство("ЗаполнениеПолей", СоответствиеКолонок) Тогда
		ПараметрыСобытия.Вставить("ТекстОшибки", "Отсутствует настройка соответствия колонок запроса колонкам СУБД!");
		Возврат Ложь;
	КонецЕсли;
	
	УзелКонтроляИзменений = Неопределено;
	Настройка.Свойство("УзелКонтроляИзменений", УзелКонтроляИзменений);
	
	КоличествоСтрокВВыборкеДанных = 0;
	Если Настройка.Свойство("КоличествоСтрокВВыборкеДанных") Тогда
		КоличествоСтрокВВыборкеДанных = Настройка.КоличествоСтрокВВыборкеДанных;
	КонецЕсли;
	
	КоличествоСтрокВТранзакцииСУБД = 200;
	Если Настройка.Свойство("КоличествоСтрокВТранзакцииСУБД") Тогда
		КоличествоСтрокВТранзакцииСУБД = Настройка.КоличествоСтрокВТранзакцииСУБД;
	КонецЕсли;
	
	ОбработкаПустогоРезультатаЗапроса = 0;
	Если Настройка.Свойство("ОбработкаПустогоРезультатаЗапроса") Тогда
		ОбработкаПустогоРезультатаЗапроса = Настройка.ОбработкаПустогоРезультатаЗапроса;
	КонецЕсли;
	
	ТекстОшибки = "";
	
	ДополнитьОписаниеКолонокОписаниемТипов(НастройкаСоединения, ТаблицаДляОбновления, СоответствиеКолонок, ТекстОшибки);
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		ПараметрыСобытия.Вставить("ТекстОшибки", ТекстОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	ТекстСписокПолейДляЗагрузки = "";
	
	ШаблонЗапросаКСУБД = ПолучитьТекстЗапросаКСУБД(ТаблицаДляОбновления
												 , СоответствиеКолонок
												 , ТекстСписокПолейДляЗагрузки);
	
	ПроцессорЗапросов = Обработки.ктв_сб_ПроцессорЗапросов.Создать();
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("Источник"				, Источник);
	ДопПараметры.Вставить("УзелКонтроляИзменений"	, УзелКонтроляИзменений);
	ДопПараметры.Вставить("Событие"					, Событие);
	ДопПараметры.Вставить("Обработчик"				, Обработчик);
	ДопПараметры.Вставить("ПараметрыСобытия"		, ПараметрыСобытия);
	
	Пока Истина Цикл
		Попытка
			РезультатЗапроса = ПроцессорЗапросов.ВыполнитьЗапрос(Настройка.Запрос_Текст
																, Настройка.Запрос_Параметры
																, КоличествоСтрокВВыборкеДанных
																, Настройка.ПроизвольныеВыражения
																, ДопПараметры
																, Ложь
																, ТекстОшибки);
		Исключение
			ТекстОшибки = "Ошибка запроса 1С: ";
			ТекстОшибки = ТекстОшибки + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ПараметрыСобытия.Вставить("ТекстОшибки", ТекстОшибки);
			Возврат Ложь;
		КонецПопытки;
		
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			ТекстОшибки = "Ошибка запроса 1С: " + ТекстОшибки;
			ПараметрыСобытия.Вставить("ТекстОшибки", ТекстОшибки);
			Возврат Ложь;
		КонецЕсли;
		
		Если РезультатЗапроса.Пустой() Тогда
			Если ОбработкаПустогоРезультатаЗапроса = 1 Тогда
				ПараметрыСобытия.Вставить("ТекстОшибки", "Отсутствуют данные для выгрузки!");
			ИначеЕсли ОбработкаПустогоРезультатаЗапроса = 2 Тогда
				Возврат Истина;
			КонецЕсли;
			Прервать;
		КонецЕсли;
		
		ТаблицаКВыгрузке = РезультатЗапроса.Выгрузить();
		
		ОбработаноСтрок = 0;
		
		Попытка
			ЗапросыКСУБД = ПодготовитьДанныеДляВыгрузки(ШаблонЗапросаКСУБД
													  , ТаблицаКВыгрузке
													  , СоответствиеКолонок
													  , ТекстСписокПолейДляЗагрузки
													  , КоличествоСтрокВТранзакцииСУБД
													  , ОбработаноСтрок);
			
			ПараметрыСобытия.Вставить("ОбработаноСтрок"	, ОбработаноСтрок);
		Исключение
			ТекстОшибки = "Ошибка подготовки запросов к СУБД: ";
			ТекстОшибки = ТекстОшибки + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ПараметрыСобытия.Вставить("ОбработаноСтрок"	, ОбработаноСтрок);
			ПараметрыСобытия.Вставить("ТекстОшибки"		, ТекстОшибки);
			Возврат Ложь;
		КонецПопытки;
		
		Соединение = Неопределено;
		
		Если НЕ ПолучитьСоединениеССУБД(НастройкаСоединения.Драйвер
									  , НастройкаСоединения.Сервер
									  , НастройкаСоединения.ИмяБазы
									  , НастройкаСоединения.Пользователь
									  , НастройкаСоединения.Пароль
									  , Соединение
									  , ТекстОшибки) Тогда
			ТекстОшибки = "Ошибка соединения с СУБД: "
						+ Символы.ПС
						+ ТекстОшибки;
			ПараметрыСобытия.Вставить("ТекстОшибки", ТекстОшибки);
			Возврат Ложь;
		КонецЕсли;
		
		Результат = ОбработатьМассивЗапросовКСУБД(Соединение, ЗапросыКСУБД, УзелКонтроляИзменений, ТекстОшибки);
		
		Если НЕ Результат = Истина Тогда
			ПараметрыСобытия.Вставить("ТекстОшибки", ТекстОшибки);
			Прервать;
		КонецЕсли;
		
		Если КоличествоСтрокВВыборкеДанных = 0 ИЛИ ТаблицаКВыгрузке.Количество() < КоличествоСтрокВВыборкеДанных Тогда
			Прервать;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(УзелКонтроляИзменений) Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции //ОбработатьСобытие()

#КонецОбласти

#Область ПроцедурыВыгрузкиДанных

// Процедура - Дополняет текст создания таблицы (раздел "DECLARE <...> TABLE" запроса создания табличной переменной)
//			   по настройке соединения с таблицей SQL
//
// Параметры:
//  ТекстЗапроса				 - Строка			 - Возвращаемый текст запроса
//	ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//													   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//		ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//		ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//		ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			*                                        - Аналогичная структура
//		ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//		ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//		ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//
Процедура ДополнитьТекстЗапросаСУБД_СозданиеТаблицы(ТекстЗапроса, ПоляКлюча)
	
	Для Каждого ТекПолеКлюча Из ПоляКлюча Цикл
		
		Если ЗначениеЗаполнено(ТекПолеКлюча.ТаблицаИсточник) Тогда
			
			ДополнитьТекстЗапросаСУБД_СозданиеТаблицы(ТекстЗапроса, ТекПолеКлюча.ПоляКлюча);
			
		ИначеЕсли ЗначениеЗаполнено(ТекПолеКлюча.ПсевдонимСУБД) Тогда
			
			ТекстЗапроса = ТекстЗапроса
						 + ?(Прав(ТекстЗапроса, 1) = "(", "", ", ")
						 + "[" + ТекПолеКлюча.ПсевдонимСУБД + "]"
						 + " "
						 + ТекПолеКлюча.ТипСУБД;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ДополнитьТекстЗапросаСУБД_СозданиеТаблицы()

// Процедура - Формирует текст создания таблицы (раздел "DECLARE <...> TABLE" запроса создания табличной переменной)
//
// Параметры:
//  ТекстЗапроса				 - Строка			 - Возвращаемый текст запроса
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//
Процедура ПодготовитьТекстЗапросаСУБД_СозданиеТаблицы(ТекстЗапроса, СоответствиеКолонок)
	
	ТекстЗапроса = "DECLARE @T1CTmp TABLE (";
	
	Для Каждого ТекЭлемент Из СоответствиеКолонок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекЭлемент.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекЭлемент.ТаблицаИсточник) Тогда
			ДополнитьТекстЗапросаСУБД_СозданиеТаблицы(ТекстЗапроса, ТекЭлемент.ПоляКлюча);
		Иначе
			ТекстЗапроса = ТекстЗапроса
						 + ?(Прав(ТекстЗапроса, 1) = "(", "", ", ")
						 + "[" + ТекЭлемент.КолонкаСУБД + "]"
						 + " "
						 + ТекЭлемент.ТипСУБД;
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + ");";
	
КонецПроцедуры //ПодготовитьТекстЗапросаСУБД_СозданиеТаблицы()

// Процедура - Дополняет текст списка полей для загрузки (раздел: "INSERT" запроса создания табличной переменной)
//			   по настройке соединения с таблицей SQL
//
// Параметры:
//  ТекстЗапроса				 - Строка			 - Возвращаемый текст запроса
//	ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//													   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//		ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//		ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//		ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			*                                        - Аналогичная структура
//		ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//		ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//		ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//
Процедура ДополнитьТекстЗапросаСУБД_СписокПолейДляЗагрузки(ТекстЗапроса, ПоляКлюча)
	
	Для Каждого ТекПолеКлюча Из ПоляКлюча Цикл
		
		Если ЗначениеЗаполнено(ТекПолеКлюча.ТаблицаИсточник) Тогда
			
			ДополнитьТекстЗапросаСУБД_СписокПолейДляЗагрузки(ТекстЗапроса, ТекПолеКлюча.ПоляКлюча);
			
		ИначеЕсли ЗначениеЗаполнено(ТекПолеКлюча.ПсевдонимСУБД) Тогда
			
			ТекстЗапроса = ТекстЗапроса
						 + ?(СокрЛП(ТекстЗапроса) = "", "", ", ")
						 + "[" + ТекПолеКлюча.ПсевдонимСУБД + "]";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ДополнитьТекстЗапросаСУБД_СписокПолейДляЗагрузки()

// Процедура - Формирует текст списка полей для загрузки (раздел: "INSERT" запроса создания табличной переменной)
//
// Параметры:
//  ТекстЗапроса				 - Строка			 - Возвращаемый текст запроса
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//
Процедура ПодготовитьТекстЗапросаСУБД_СписокПолейДляЗагрузки(ТекстЗапроса, СоответствиеКолонок)
	
	ТекстЗапроса = "";
	
	Для Каждого ТекЭлемент Из СоответствиеКолонок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекЭлемент.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекЭлемент.ТаблицаИсточник) Тогда
			ДополнитьТекстЗапросаСУБД_СписокПолейДляЗагрузки(ТекстЗапроса, ТекЭлемент.ПоляКлюча);
		Иначе
			ТекстЗапроса = ТекстЗапроса
						 + ?(СокрЛП(ТекстЗапроса) = "", "", ", ")
						 + "[" + ТекЭлемент.КолонкаСУБД + "]";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры //ПодготовитьТекстЗапросаСУБД_СписокПолейДляЗагрузки()

// Процедура - Формирует текст списка полей для вставки (раздел: "INSERT" запроса добавления данных)
//
// Параметры:
//  ТекстЗапроса				 - Строка			 - Возвращаемый текст запроса
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//
Процедура ПодготовитьТекстЗапросаСУБД_ВставкаСписокПолей(ТекстЗапроса, СоответствиеКолонок)
	
	ТекстЗапроса = "";
	
	Для Каждого ТекЭлемент Из СоответствиеКолонок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекЭлемент.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса
					 + ?(СокрЛП(ТекстЗапроса) = "", "", ", ")
					 + "[" + ТекЭлемент.КолонкаСУБД + "]";
	КонецЦикла;
	
КонецПроцедуры //ПодготовитьТекстЗапросаСУБД_ВставкаСписокПолей()

Процедура ДополнитьТекстЗапросаСУБД_ВыборПолей(ТекстЗапроса, ПоляКлюча, Знач Уровень, Знач ПарамНомерДополнения)
	
	//НомерДополнения = 1;
	//
	//Для Каждого ТекПолеКлюча Из ПоляКлюча Цикл
	//	
	//	Если ЗначениеЗаполнено(ТекПолеКлюча.ТаблицаИсточник) Тогда
	//		
	//		ДополнитьТекстЗапросаСУБД_ВыборПолей(ТекстЗапроса, ТекПолеКлюча.ПоляКлюча, Уровень + 1, НомерДополнения);
	//		
	//		НомерДополнения = НомерДополнения + 1;
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
КонецПроцедуры //ДополнитьТекстЗапросаСУБД_ВыборПолей()

// Процедура - Формирует текст списка выбираемых полей (раздел: "SELECT" запросов добавления/обновления данных)
//
// Параметры:
//  ТекстЗапроса				 - Строка			 - Возвращаемый текст запроса
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//
Процедура ПодготовитьТекстЗапросаСУБД_ВыборПолей(ТекстЗапроса, СоответствиеКолонок)
	
	ТекстЗапроса = "";
	
	Уровень = 0;
	
	НомерДополнения = 1;
	
	Для Каждого ТекЭлемент Из СоответствиеКолонок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекЭлемент.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекЭлемент.ТаблицаИсточник) Тогда
			
			//ДополнитьТекстЗапросаСУБД_ВыборПолей(ТекстЗапроса, ТекЭлемент.ПоляКлюча, Уровень + 1, НомерДополнения);
			
			ТекстЗапроса = ТекстЗапроса
						 + ?(СокрЛП(ТекстЗапроса) = "", "	", ",
																|	")
						 + "TAdd" + Формат(Уровень, "ЧН=; ЧГ=0") + "_" + Формат(НомерДополнения, "ЧН=; ЧГ=0") + ".[" + ТекЭлемент.ПолеЗначения + "] AS [" + ТекЭлемент.КолонкаСУБД + "]";
			
			НомерДополнения = НомерДополнения + 1;
			
		Иначе
			ТекстЗапроса = ТекстЗапроса
						 + ?(СокрЛП(ТекстЗапроса) = "", "	", ",
																|	")
						 + "T1CTmp.[" + ТекЭлемент.КолонкаСУБД + "] AS [" + ТекЭлемент.КолонкаСУБД + "]";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ПодготовитьТекстЗапросаСУБД_ВыборПолей()

// Процедура - Дополняет текст соединения с таблицами SQL ("LEFT JOIN" раздел: "FROM" запросов добавления/обновления данных)
//			   по настройке соединения с таблицей SQL
//
// Параметры:
//  ТекстЗапроса				 - Строка			 - Возвращаемый текст запроса
//  ТекстУсловийСоединения		 - Строка			 - Возвращаемый текст условий соединения
//	ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//													   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//		ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//		ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//		ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			*                                        - Аналогичная структура
//		ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//		ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//		ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//  Уровень						 - Число			 - Уровень вложенности соединения
//  НомерДополнения				 - Число			 - Номер присоединяемой таблицы на указанном уровне вложенности
//
Процедура ДополнитьТекстЗапросаСУБД_Соединения(ТекстЗапроса, ТекстУсловийСоединения = "", ПоляКлюча, Знач Уровень, Знач НомерДополнения)
	
	НомерДополненияВнутр = 1;
	
	Для Каждого ТекПолеКлюча Из ПоляКлюча Цикл
		
		ПсевдонимТаблицыДополнения = "TAdd" + Формат(Уровень - 1, "ЧН=; ЧГ=0") + "_" + Формат(НомерДополнения, "ЧН=; ЧГ=0");
		ПсевдонимТаблицыДополненияВнутр = "TAdd" + Формат(Уровень, "ЧН=; ЧГ=0") + "_" + Формат(НомерДополненияВнутр, "ЧН=; ЧГ=0");
		
		Если ЗначениеЗаполнено(ТекПолеКлюча.ТаблицаИсточник) Тогда
			
			ТекстУсловийСоединенияВнутр = "";
			
			ДополнитьТекстЗапросаСУБД_Соединения(ТекстЗапроса, ТекстУсловийСоединенияВнутр, ТекПолеКлюча.ПоляКлюча, Уровень + 1, НомерДополненияВнутр);
			
			Если НЕ ТекстУсловийСоединенияВнутр = "" Тогда
				ТекстЗапроса = ТекстЗапроса + "
											  |LEFT JOIN " + ТекПолеКлюча.ТаблицаИсточник + " AS " + ПсевдонимТаблицыДополненияВнутр + "
											  | ON " + ТекстУсловийСоединенияВнутр;
				ТекстУсловийСоединения = ТекстУсловийСоединения
									   + ?(ТекстУсловийСоединения = "", "", "
																			| AND ")
									   + ПсевдонимТаблицыДополненияВнутр + ".[" + ТекПолеКлюча.ПолеЗначения + "] = "
									   + ПсевдонимТаблицыДополнения + ".[" + ТекПолеКлюча.ПолеКлюча + "]";
			КонецЕсли;
	
			НомерДополненияВнутр = НомерДополненияВнутр + 1;
			
		ИначеЕсли ЗначениеЗаполнено(ТекПолеКлюча.ПсевдонимСУБД) Тогда
			ТекстУсловийСоединения = ТекстУсловийСоединения
								   + ?(ТекстУсловийСоединения = "", "", "
																		| AND ")
								   + "T1CTmp.[" + ТекПолеКлюча.ПсевдонимСУБД + "] = "
								   + ПсевдонимТаблицыДополнения + ".[" + ТекПолеКлюча.ПолеКлюча + "]";
		КонецЕсли;
		
	КонецЦикла;
	

КонецПроцедуры //ДополнитьТекстЗапросаСУБД_Соединения()

// Процедура - Формирует текст соединения с таблицами SQL ("LEFT JOIN" раздел: "FROM" запросов добавления/обновления данных)
//
// Параметры:
//  ТекстЗапроса					 - Строка			 - Возвращаемый текст запроса
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//
Процедура ПодготовитьТекстЗапросаСУБД_Соединения(ТекстЗапроса, СоответствиеКолонок)
	
	ТекстЗапроса = "";
	
	Уровень = 0;
	
	НомерДополнения = 1;
	
	Для Каждого ТекЭлемент Из СоответствиеКолонок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекЭлемент.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекЭлемент.ТаблицаИсточник) Тогда
			
			ТекстУсловийСоединения = "";
			
			ДополнитьТекстЗапросаСУБД_Соединения(ТекстЗапроса, ТекстУсловийСоединения, ТекЭлемент.ПоляКлюча, Уровень + 1, НомерДополнения);
			
			Если НЕ ТекстУсловийСоединения = "" Тогда
				ТекстЗапроса = ТекстЗапроса + "
											  |LEFT JOIN " + ТекЭлемент.ТаблицаИсточник + " AS TAdd" + Формат(Уровень, "ЧН=; ЧГ=0") + "_" + Формат(НомерДополнения, "ЧН=; ЧГ=0") + "
											  | ON " + ТекстУсловийСоединения;
			КонецЕсли;
	
			НомерДополнения = НомерДополнения + 1;
	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ПодготовитьТекстЗапросаСУБД_Соединения()

// Процедура - Формирует текст фильтра выборки записей ("LEFT JOIN" раздел: "FROM" запросов добавления/обновления данных)
//
// Параметры:
//  ТекстЗапроса					 - Строка			 - Возвращаемый текст запроса
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//  ТаблицаДляОбновления			 - Строка			 - Имя изменяемой таблицы SQL
//
Процедура ПодготовитьТекстЗапросаСУБД_ФильтрВыборкиЗаписей(ТекстЗапроса, СоответствиеКолонок, ТаблицаДляОбновления)
	
	ТекстЗапроса = "";
	
	НомерДополнения = 1;
	
	Для Каждого ТекЭлемент Из СоответствиеКолонок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекЭлемент.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекЭлемент.ТаблицаИсточник) Тогда
			
			Если ТекЭлемент.ПолеПоиска Тогда
				
				ТекстЗапроса = ТекстЗапроса
							 + ?(СокрЛП(ТекстЗапроса) = "", "", "
																| AND ")
							 + "TAdd0_" + Формат(НомерДополнения, "ЧН=; ЧГ=0") + ".[" + ТекЭлемент.ПолеЗначения + "]" + " = " + ТаблицаДляОбновления + ".[" + ТекЭлемент.КолонкаСУБД + "]";
			
			КонецЕсли;
			
			НомерДополнения = НомерДополнения + 1;
		Иначе
		
			Если ТекЭлемент.ПолеПоиска Тогда
				
				ТекстЗапроса = ТекстЗапроса
							 + ?(СокрЛП(ТекстЗапроса) = "", "", "
																| AND ")
							  + "T1CTmp.[" + ТекЭлемент.КолонкаСУБД + "]" + " = " + ТаблицаДляОбновления + ".[" + ТекЭлемент.КолонкаСУБД + "]";
			
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры //ПодготовитьТекстЗапросаСУБД_ФильтрВыборкиЗаписей()

// Процедура - Формирует текст обновленя значений (раздел: "SET" запроса обновления данных)
//
// Параметры:
//  ТекстЗапроса					 - Строка			 - Возвращаемый текст запроса
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//
Процедура ПодготовитьТекстЗапросаСУБД_ОбновлениеЗначений(ТекстЗапроса, СоответствиеКолонок)
	
	ТекстЗапроса = "";
	
	Для Каждого ТекЭлемент Из СоответствиеКолонок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекЭлемент.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
				
		Если НЕ ТекЭлемент.ПолеПоиска Тогда
			
			ТекстЗапроса = ТекстЗапроса
						 + ?(СокрЛП(ТекстЗапроса) = "", "", ",
															| ")
						 + "[" + ТекЭлемент.КолонкаСУБД + "]" + " = TUpdate." + "[" + ТекЭлемент.КолонкаСУБД + "]";
		КонецЕсли;
								  
	КонецЦикла;
	
КонецПроцедуры //ПодготовитьТекстЗапросаСУБД_ОбновлениеЗначений()

// Процедура - Формирует текст фильтра обновляемых записей (раздел: "WHERE" запроса обновления данных)
//
// Параметры:
//  ТекстЗапроса					 - Строка			 - Возвращаемый текст запроса
//  ПолеДляКонтроля					 - Строка			 - Возвращаемый путь к полю для контроля существования записей в таблице SQL
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//  ТаблицаДляОбновления			 - Строка			 - Имя изменяемой таблицы SQL
//
Процедура ПодготовитьТекстЗапросаСУБД_ФильтрОбновляемыхЗаписей(ТекстЗапроса, ПолеДляКонтроля, СоответствиеКолонок, ТаблицаДляОбновления)
	
	ТекстЗапроса = "";
	
	ПолеДляКонтроля = "";
	
	Для Каждого ТекЭлемент Из СоответствиеКолонок Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекЭлемент.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
				
		Если ТекЭлемент.ПолеПоиска Тогда
			
			Если ПолеДляКонтроля = "" Тогда
				ПолеДляКонтроля = ТаблицаДляОбновления + "." + "[" + ТекЭлемент.КолонкаСУБД + "]";
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса
						 + ?(СокрЛП(ТекстЗапроса) = "", "", "
															| AND ")
						 + ТаблицаДляОбновления + ".[" + ТекЭлемент.КолонкаСУБД + "] = TUpdate.[" + ТекЭлемент.КолонкаСУБД + "]";
		КонецЕсли;
								  
	КонецЦикла;
	
КонецПроцедуры //ПодготовитьТекстЗапросаСУБД_ФильтрОбновляемыхЗаписей()

// Функция - Получает текст запроса загрузки данных во внешнюю СУБД
//
// Параметры:
//  ТаблицаДляОбновления			 - Строка			 - Имя таблицы, в которую будут загружаться данные
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//  ТекстСписокПолейДляЗагрузки		 - Строка			 - Список полей через (,) которые будут загружены во внешнюю СУБД
// 
// Возвращаемое значение:
//		Строка - Текст запроса для загрузки данных во внешнюю СУБД
//
Функция ПолучитьТекстЗапросаКСУБД(ТаблицаДляОбновления, СоответствиеКолонок, ТекстСписокПолейДляЗагрузки = "") Экспорт
	
	ЗапросДляСУБД =
	"-- Начало явной транзакции
	|BEGIN TRAN UL_1C_DATA_TRAN;
	|
	|SET NOCOUNT ON;
	|
	|BEGIN TRY
	|
	|";
	
	ТекстСозданияТаблицы = "";
	ПодготовитьТекстЗапросаСУБД_СозданиеТаблицы(ТекстСозданияТаблицы, СоответствиеКолонок);
	
	ТекстСписокПолейДляЗагрузки = "";
	ПодготовитьТекстЗапросаСУБД_СписокПолейДляЗагрузки(ТекстСписокПолейДляЗагрузки, СоответствиеКолонок);
	
	ТекстСписокПолейДляВставки = "";
	ПодготовитьТекстЗапросаСУБД_ВставкаСписокПолей(ТекстСписокПолейДляВставки, СоответствиеКолонок);
	
	ТекстВыбораПолей = "";
	ПодготовитьТекстЗапросаСУБД_ВыборПолей(ТекстВыбораПолей, СоответствиеКолонок);

	ТекстСоединений = "";
	ПодготовитьТекстЗапросаСУБД_Соединения(ТекстСоединений, СоответствиеКолонок);

	ТекстФильтрВыборкиЗаписей = "";
	ПодготовитьТекстЗапросаСУБД_ФильтрВыборкиЗаписей(ТекстФильтрВыборкиЗаписей, СоответствиеКолонок, ТаблицаДляОбновления);
	
	ТекстОбновлениеЗначений = "";
	ПодготовитьТекстЗапросаСУБД_ОбновлениеЗначений(ТекстОбновлениеЗначений, СоответствиеКолонок);
	
	ТекстФильтрОбновляемыхЗаписей = "";
	ПолеДляКонтроля = "";
	ПодготовитьТекстЗапросаСУБД_ФильтрОбновляемыхЗаписей(ТекстФильтрОбновляемыхЗаписей, ПолеДляКонтроля, СоответствиеКолонок, ТаблицаДляОбновления);
	
	ЗапросДляСУБД = ЗапросДляСУБД + "-- Создаем табличную переменную для загрузки данных 1С
									|" + ТекстСозданияТаблицы + "
									|
									|[[ДАННЫЕ_ДЛЯ_ЗАПОЛНЕНИЯ]]
									|
									|";
	
	Если НЕ СокрЛП(ТекстОбновлениеЗначений) = "" Тогда
		ЗапросДляСУБД = ЗапросДляСУБД + "-- Обновление существующих записей
										|
										|UPDATE dbo." + ТаблицаДляОбновления + "
										|
										|SET
										|" + ТекстОбновлениеЗначений + "
										|FROM (SELECT
										|" + ТекстВыбораПолей + "
										|		FROM @T1CTmp AS T1CTmp
										|" + ТекстСоединений + "
										|		LEFT JOIN dbo." + ТаблицаДляОбновления + " AS " + ТаблицаДляОбновления + "
										|		ON " + ТекстФильтрВыборкиЗаписей + "
										|		WHERE " + ПолеДляКонтроля + " IS NOT NULL) AS TUpdate
										|
										|WHERE " + ТекстФильтрОбновляемыхЗаписей + "
										|;
										|";
	КонецЕсли;
	
	ЗапросДляСУБД = ЗапросДляСУБД + "-- Добавление новых записей
									|
									|INSERT INTO dbo." + ТаблицаДляОбновления + " (" + ТекстСписокПолейДляВставки + ")
									|
									|SELECT
									|" + ТекстВыбораПолей + "
									|FROM @T1CTmp AS T1CTmp
									|" + ТекстСоединений + "
									|LEFT JOIN dbo." + ТаблицаДляОбновления + " AS " + ТаблицаДляОбновления + "
									|ON " + ТекстФильтрВыборкиЗаписей + "
									|
									|WHERE " + ПолеДляКонтроля + " IS NULL
									|
									|SET NOCOUNT OFF;
									|
									|-- Завершение транзакции
									|COMMIT TRAN UL_1C_DATA_TRAN;
									|
									|	SELECT
									|		0 AS ExitCode,
									|		NULL AS ErrSeverity,
									|		NULL AS ErrState,
									|		NULL AS ErrProcedure,
									|		NULL AS ErrLine,
									|		'' AS ErrMessage
									|END TRY
									|BEGIN CATCH
									|	SELECT
									|		ERROR_NUMBER() AS ExitCode,
									|		ERROR_SEVERITY() AS ErrSeverity,
									|		ERROR_STATE() AS ErrState,
									|		ERROR_PROCEDURE() AS ErrProcedure,
									|		ERROR_LINE() AS ErrLine,
									|		ERROR_MESSAGE() AS ErrMessage
									|
									|ROLLBACK TRAN UL_1C_DATA_TRAN;
									|
									|END CATCH
									|";
	
	Возврат ЗапросДляСУБД;
	
КонецФункции //ПолучитьТекстЗапросаКСУБД()
	
// Процедура - Дополняет текст создания таблицы (раздел "INSERT" запроса создания табличной переменной)
//			   по настройке соединения с таблицей SQL
//
// Параметры:
//  ТекстЗапроса				 - Строка				 - Возвращаемый текст запроса
//	ПоляКлюча                    - Массив(Структура)	 - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//		ПсевдонимСУБД            - Строка				 - Псевдоним выгружаемой колонки для связи с данными СУБД
//		ПолеКлюча                - Строка				 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//		ТаблицаИсточник          - Строка				 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                - Массив(Структура)	 - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			*											 - Аналогичная структура
//		ПолеЗначения			 - Строка				 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//		ТипСУБД					 - Строка				 - Тип колонки-ключа таблицы СУБД-приемника
//		ТипСУБДДлина			 - Число				 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность			 - Число				 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//  СтрокаДанных				 - СтрокаТаблицыЗначений - Строка результата запроса данных 1С
//
Процедура ДополнитьТекстЗапросаСУБД_ЗаполнениеСтроки(ТекстЗапроса, ПоляКлюча, СтрокаДанных)
	
	Для Каждого ТекПолеКлюча Из ПоляКлюча Цикл
		
		Если ЗначениеЗаполнено(ТекПолеКлюча.ТаблицаИсточник) Тогда
			
			ДополнитьТекстЗапросаСУБД_ЗаполнениеСтроки(ТекстЗапроса, ТекПолеКлюча.ПоляКлюча, СтрокаДанных);
			
		ИначеЕсли ЗначениеЗаполнено(ТекПолеКлюча.КолонкаЗапроса) Тогда
			
			ТекЗначение = СтрокаДанных[ТекПолеКлюча.КолонкаЗапроса];
			
			//Если ЗначениеЗаполнено(ТекЭлемент.Выражение) Тогда
			//	ТекЗначение = ВычислитьВыражениеДляПоля(СтрокаДанных, ТекЭлемент.Выражение);
			//КонецЕсли;
			//
			ТекстЗапроса = ТекстЗапроса
						 + ?(Прав(ТекстЗапроса, 1) = "(", "", ", ")
						 + ПреобразоватьЗначениеДляСУБД(ТекЗначение, ТекПолеКлюча);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры //ДополнитьТекстЗапросаСУБД_ЗаполнениеСтроки()

// Процедура - Формирует текст создания таблицы (раздел "INSERT" запроса создания табличной переменной)
//
// Параметры:
//  ТекстЗапроса				 - Строка				 - Возвращаемый текст запроса
//  ТекстПоляДляЗаполнения		 - Строка				 - Список полей для вставки в табличную переменную
//  СтрокаДанных				 - СтрокаТаблицыЗначений - Строка результата запроса данных 1С
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//  ВыгружаемыеСсылки				 - Массив			 - Массив ссылок на выгруженные объекты, для последующего снятия регистрации изменений
//
Процедура ПодготовитьТекстЗапросаСУБД_ЗаполнениеСтроки(ТекстЗапроса, ТекстПоляДляЗаполнения, СтрокаДанных, СоответствиеКолонок, ВыгружаемыеСсылки)
	
	ТекстЗапроса = "INSERT INTO @T1CTmp (" + ТекстПоляДляЗаполнения + ") VALUES (";
	
	Для Каждого ТекЭлемент Из СоответствиеКолонок Цикл
		
		Если ЗначениеЗаполнено(ТекЭлемент.КолонкаЗапроса) И ТекЭлемент.ПолеСсылки Тогда
			ВыгружаемыеСсылки.Добавить(СтрокаДанных[ТекЭлемент.КолонкаЗапроса]);
		КонецЕсли;
			
		Если НЕ ЗначениеЗаполнено(ТекЭлемент.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекЭлемент.ТаблицаИсточник) Тогда
			ДополнитьТекстЗапросаСУБД_ЗаполнениеСтроки(ТекстЗапроса, ТекЭлемент.ПоляКлюча, СтрокаДанных);
		Иначе
			ТекЗначение = СтрокаДанных[ТекЭлемент.КолонкаЗапроса];
			
			Если ЗначениеЗаполнено(ТекЭлемент.Выражение) Тогда
				ТекЗначение = ВычислитьВыражениеДляПоля(СтрокаДанных, ТекЭлемент.Выражение);
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса
									 + ?(Прав(ТекстЗапроса, 1) = "(", "", ", ")
									 + ПреобразоватьЗначениеДляСУБД(ТекЗначение, ТекЭлемент);
		КонецЕсли;								 
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + ");";
	
КонецПроцедуры //ПодготовитьТекстЗапросаСУБД_ЗаполнениеСтроки()

// Функция - Дополняет текст запроса загрузки данных во внешнюю СУБД
//			 данными, полученными запросом 1С
//
// Параметры:
//  ШаблонЗапросаКСУБД				 - Строка			 - Шаблон запроса, полученный функцией "ПолучитьТекстЗапросаКСУБД"
//  ТаблицаДляОбновления			 - Строка			 - Имя таблицы, в которую будут загружаться данные
//  ТаблицаКВыгрузке				 - ТаблицаЗначений	 - Результат запроса 1С
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//  ТекстСписокПолей				 - Строка			 - Список полей через (,) которые будут загружены во внешнюю СУБД
//  КоличествоСтрокВТранзакции		 - Число			 - Количество строк данных, загружаемых в 1 транзакции
//  ОбработаноСтрок					 - Число			 - Число обработанных строк запроса 1С
// 
// Возвращаемое значение:
// 		Массив (Структура)				 - Массив запросов для загрузки данных во внешнюю СУБД
//			Ссылки			- Массив	 - Массив ссылок, с которыми связаны выгружаемые данные
//			Запрос			- Строка	 - Текст запроса загрузки данных во внешнюю СУБД
//
Функция ПодготовитьДанныеДляВыгрузки(ШаблонЗапросаКСУБД
								   , ТаблицаКВыгрузке
								   , СоответствиеКолонок
								   , ТекстСписокПолей
								   , Знач КоличествоСтрокВТранзакции = 100
								   , ОбработаноСтрок = Неопределено) Экспорт
	
	ЗапросыКСУБД = Новый Массив();
	
	ВсегоСтрок		= ТаблицаКВыгрузке.Количество();
	
	КоличествоСтрокВТранзакции = ?(КоличествоСтрокВТранзакции <= 0, ВсегоСтрок, КоличествоСтрокВТранзакции);
	
	ОбработаноСтрок	= 0;
	
	Пока ОбработаноСтрок < ВсегоСтрок Цикл
		
		ТекстЗаполненияТаблицы = Новый ТекстовыйДокумент();
		
		ВыгружаемыеСсылки = Новый Массив();
		
		Для й = 1 По КоличествоСтрокВТранзакции Цикл
			
			ТекСтрока = ТаблицаКВыгрузке[ОбработаноСтрок];
			
			ТекстЗаполненияСтроки = "";
			ПодготовитьТекстЗапросаСУБД_ЗаполнениеСтроки(ТекстЗаполненияСтроки, ТекстСписокПолей, ТекСтрока, СоответствиеКолонок, ВыгружаемыеСсылки);
			
			ТекстЗаполненияТаблицы.ДобавитьСтроку(ТекстЗаполненияСтроки);
			
			ОбработаноСтрок = ОбработаноСтрок + 1;
			
			Если ОбработаноСтрок = ВсегоСтрок Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	
		ЗапросДляСУБД = СтрЗаменить(ШаблонЗапросаКСУБД, "[[ДАННЫЕ_ДЛЯ_ЗАПОЛНЕНИЯ]]", ТекстЗаполненияТаблицы.ПолучитьТекст());
		
		ЗапросыКСУБД.Добавить(Новый Структура("Ссылки, Запрос", ВыгружаемыеСсылки, ЗапросДляСУБД));
		
	КонецЦикла;
	
	Возврат ЗапросыКСУБД;
	
КонецФункции //ПодготовитьДанныеДляВыгрузки()

// Функция - Выполняет соединение с SQL сервером используя ADODB
//
// Параметры:
//  Драйвер				 - Строка			 - Имя драйвера для соединения с внешней СУБД
//  Сервер				 - Строка			 - Имя сервера, где расположена внешняя СУБД
//  ИмяБазы				 - Строка			 - Имя базы данных во внешней СУБД
//  Пользователь		 - Строка			 - Имя пользователя для соединения с внешней СУБД
//  Пароль				 - Строка			 - Пароль пользователя для соединения с внешней СУБД
//  Соединение			 - COMОбъект		 - Соединение с внешней СУБД, полученное в результате выполнения функции
//  ТекстОшибки			 - Строка			 - Описание возникшей ошибки
// 
// Возвращаемое значение:
// 		Булево - Истина - соединение выполнено успешно, Ложь - в противном случае
//
Функция ПолучитьСоединениеССУБД(Драйвер, Сервер, ИмяБазы, Пользователь, Пароль, Соединение = Неопределено, ТекстОшибки = "") Экспорт
	
	Если Соединение <> Неопределено Тогда
		
		Если Соединение.State = 1 Тогда 
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	// пытаемся соединиться с БД
	Попытка
		Соединение = Новый COMОбъект("ADODB.Connection");	
		СтрокаСоединения = "Driver=" + СокрЛП(Драйвер) +
						   ";server=" + СокрЛП(Сервер) +
						   ";uid=" + СокрЛП(Пользователь) +
						   ";pwd=" + СокрЛП(Пароль) +
						   ";Database=" + СокрЛП(ИмяБазы) + ";";
		
		Соединение.ConnectionTimeout = 10;
		Соединение.CommandTimeout = 0;
		Соединение.CursorLocation = 3;
		
		// Соединяемся с БД
		Соединение.Open(СтрокаСоединения); 
		
	Исключение 
		
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции //ПолучитьСоединениеССУБД()

// Функция - Выполняет запрос КСУБД
//
// Параметры:
//  Соединение			 - COMОбъект		 - Соединение с внешней СУБД, через которое будет выполняться запрос
//  ТекстЗапроса		 - Строка			 - Текст запроса
//  РезультатЗапроса	 - COMОбъект		 - Результат выполнения запроса
//  ТекстОшибки			 - Строка			 - Описание возникшей ошибки
// 
// Возвращаемое значение:
// 		Булево - Истина - запрос выполнен успешно, Ложь - в противном случае
//
Функция ВыполнитьЗапросКСУБД(Соединение, ТекстЗапроса, РезультатЗапроса = Неопределено, ТекстОшибки = "") Экспорт
	
	Попытка
		
		РезультатЗапроса = Соединение.Execute(ТекстЗапроса);		
	
	Исключение
		
		ТекстОшибки = "Ошибка выполнения запроса к СУБД:" + Символы.ПС
					+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()) + Символы.ПС
					+ ТекстЗапроса;
		Возврат Ложь;
	
	КонецПопытки; 
	
	Возврат Истина;	
	
КонецФункции //ВыполнитьЗапросКСУБД()

// Функция - Последовательно выполняет запросы к внешней СУБД из переданного массива
//
// Параметры:
//  Соединение			 - COMОбъект			 - Соединение с внешней СУБД, через которое будут выполняться запросы
//  ЗапросыКСУБД		 - Массив (Структура)	 - Массив запросов для загрузки данных во внешнюю СУБД
//		Ссылки			 - Массив				 - Массив ссылок, с которыми связаны выгружаемые данные
//		Запрос			 - Строка				 - Текст запроса загрузки данных во внешнюю СУБД
//  Узел				 - ПланОбменаСсылка		 - Узел для отмены регистрации изменений выгруженных объектов (из поля Ссылки)
//  ТекстОшибки			 - Строка				 - Описание возникшей ошибки
// 
// Возвращаемое значение:
//		Булево - Истина - запросы выполнены успешно, Ложь - в противном случае
//
Функция ОбработатьМассивЗапросовКСУБД(Соединение, ЗапросыКСУБД, Узел = Неопределено, ТекстОшибки = "") Экспорт
	
	Для Каждого ТекЭлемент Из ЗапросыКСУБД Цикл
		
		РезультатЗапроса = Неопределено;
		
		ТекстОшибокЗапроса = "";
		Результат = ВыполнитьЗапросКСУБД(Соединение, ТекЭлемент.Запрос, РезультатЗапроса, ТекстОшибокЗапроса);
		
		Если Результат = Ложь Тогда
			
			ТекстОшибки = "При выполнении запроса к СУБД возникли ошибки: "
						+ ?(ТекстОшибки = "", "", Символы.ПС + ТекстОшибокЗапроса);
			
			Для Каждого ТекОшибка Из Соединение.Errors Цикл
				ТекстОшибки = ТекстОшибки + Символы.ПС + СокрЛП(ТекОшибка.Description);
			КонецЦикла;
			
			Возврат Ложь;
		КонецЕсли;
		
		Если РезультатЗапроса.EOF = 0 Тогда
				
			СтруктураРезультата = Новый Структура("ExitCode, ErrSeverity, ErrState, ErrProcedure, ErrLine, ErrMessage");
			
			Для Каждого ТекКолонка Из РезультатЗапроса.Fields Цикл
				СтруктураРезультата[ТекКолонка.Name] = ТекКолонка.Value;
			КонецЦикла;
			
			Если НЕ СтруктураРезультата.ExitCode = 0 Тогда
				ТекстОшибки = ТекстОшибки
							+ ?(ТекстОшибки = "", "При выполнении запроса к СУБД возникли ошибки: ", "");
				
				ТекстОшибки = ТекстОшибки + Символы.ПС
							+ " (Code: " + СокрЛП(СтруктураРезультата.ExitCode) + ")" + СокрЛП(СтруктураРезультата.ErrMessage) + " (Line: " + СокрЛП(СтруктураРезультата.ErrLine) + ")";
			
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Узел) Тогда
			Для Каждого ТекСсылка Из ТекЭлемент.Ссылки Цикл
				ПланыОбмена.УдалитьРегистрациюИзменений(Узел, ТекСсылка);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции //ОбработатьМассивЗапросовКСУБД()
	
#КонецОбласти

#Область ВспомогательныеПроцедуры

Процедура ДобавитьОписаниеТиповПолейКлюча(СтрокаСоответствияКолонок, СоответствиеОписаний)
	
	Если НЕ (ПустаяСтрока(СтрокаСоответствияКолонок.ТаблицаИсточник) ИЛИ ПустаяСтрока(СтрокаСоответствияКолонок.ПоляКлюча)) Тогда
		Попытка
			СтрокаСоответствияКолонок.ПоляКлюча = ЗначениеИзСтрокиВнутр(СтрокаСоответствияКолонок.ПоляКлюча);
		Исключение
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;

		Для Каждого ТекПолеКлюча Из СтрокаСоответствияКолонок.ПоляКлюча Цикл
			ТекПолеКлюча.Вставить("ТипСУБД", "");
			ТекПолеКлюча.Вставить("ТипСУБДДлина", NULL);
			ТекПолеКлюча.Вставить("ТипСУБДТочность", NULL);
			ТекПолеКлюча.Вставить("ТипСУБДВозможноПусто", Истина);
			
			ТекОписание = СоответствиеОписаний[ВРег(СтрокаСоответствияКолонок.ТаблицаИсточник + "." + ТекПолеКлюча.ПолеКлюча)];
			Если ТекОписание = Неопределено Тогда
				СоответствиеОписаний.Вставить(ВРег(СтрокаСоответствияКолонок.ТаблицаИсточник + "." + ТекПолеКлюча.ПолеКлюча), Новый Массив());
				ТекОписание = СоответствиеОписаний[ВРег(СтрокаСоответствияКолонок.ТаблицаИсточник + "." + ТекПолеКлюча.ПолеКлюча)];
			КонецЕсли;
			ТекОписание.Добавить(ТекПолеКлюча);
			
			ДобавитьОписаниеТиповПолейКлюча(ТекПолеКлюча, СоответствиеОписаний);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры //ДобавитьОписаниеТиповПолейКлюча()

// Процедура - Дополняет описание колонок СУБД описанием типов
//
// Параметры:
//  НастройкаСоединения				 - Структура		 - Описание настройки соединения с СУБД
//		Драйвер						 - Строка			 - Имя драйвера для соединения с внешней СУБД
//		Сервер						 - Строка			 - Имя сервера, где расположена внешняя СУБД
//		ИмяБазы						 - Строка			 - Имя базы данных во внешней СУБД
//		Пользователь				 - Строка			 - Имя пользователя для соединения с внешней СУБД
//		Пароль						 - Строка			 - Пароль пользователя для соединения с внешней СУБД
//  ТаблицаДляОбновления			 - Строка			 - Имя таблицы, в которую будут загружаться данные
//  СоответствиеКолонок				 - ТаблицаЗначений	 - Описание сопоставления колонок запроса 1С и таблицы СУБД-приемника
//									 - Массив (Структура)
//		КолонкаСУБД					 - Строка			 - Имя колонки таблицы СУБД-приемника
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		КолонкаЗапроса				 - Строка			 - Имя колонки запроса получения данных 1С
//		ПолеПоиска					 - Булево			 - Признак ключевого поля, по которому проверяется уникальность записи в таблице СУБД-приемнике
//		ПолеСсылки					 - Булево			 - Признак, что поле запроса является ключевым
//		Выражение					 - Строка			 - Выражение на языке 1С, которое будет выполнено для строки результата запроса
//														   и результат которого будет передан для записи во внешнюю СУБД
//		ТаблицаИсточник              - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//		ПоляКлюча                    - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//														   (Значение<КолонкаСУБД>=Значение<ПолеКлюча>)
//			ПсевдонимСУБД            - Строка			 - Псевдоним выгружаемой колонки для связи с данными СУБД
//			ПолеКлюча                - Строка			 - Поле таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//			ТаблицаИсточник          - Строка			 - Таблица внешней СУБД-приемника, из которой будет взято значение при загрузке данных
//			ПоляКлюча                - Массив(Структура) - Поля таблицы внешней СУБД-приемника, по которому будет выполнена связь с выгружаемыми данными
//				*                                        - Аналогичная структура
//			ПолеЗначения			 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//			ТипСУБД					 - Строка			 - Тип колонки-ключа таблицы СУБД-приемника
//			ТипСУБДДлина			 - Число			 - Длина значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//			ТипСУБДТочность			 - Число			 - Точность значения колонки-ключа таблицы СУБД-приемника (если применимо для указанного типа)
//		ПолеЗначения				 - Строка			 - Поле таблицы внешней СУБД-приемника, из которого будет взято значение при загрузке данных
//  ТекстОшибки						 - Строка			 - Описание возникшей ошибки
//
Процедура ДополнитьОписаниеКолонокОписаниемТипов(НастройкаСоединения, ТаблицаДляОбновления, СоответствиеКолонок, ТекстОшибки = "") Экспорт
	
	Соединение = Неопределено;
	
	Если НЕ ПолучитьСоединениеССУБД(НастройкаСоединения.Драйвер
								  , НастройкаСоединения.Сервер
								  , НастройкаСоединения.ИмяБазы
								  , НастройкаСоединения.Пользователь
								  , НастройкаСоединения.Пароль
								  , Соединение
								  , ТекстОшибки) Тогда
		ТекстОшибки = "Ошибка соединения с СУБД: "
					+ Символы.ПС
					+ ТекстОшибки;
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаКСУБД = "USE [" + НастройкаСоединения.ИмяБазы + "];
						|
						|SELECT
						|	Columns.TABLE_NAME AS tablename,
						|	Columns.COLUMN_NAME AS name,
						|	Columns.DATA_TYPE AS datatype,
						|	ISNULL(Columns.CHARACTER_MAXIMUM_LENGTH, Columns.NUMERIC_PRECISION) AS lenght,
						|	Columns.NUMERIC_SCALE AS scale,
						|	Columns.IS_NULLABLE AS nullable
						|
						|FROM information_schema.columns AS Columns";
	
	РезультатЗапроса  = Неопределено;
	
	Если НЕ ВыполнитьЗапросКСУБД(Соединение, ТекстЗапросаКСУБД, РезультатЗапроса, ТекстОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеОписаний = Новый Соответствие();
	
	Для Каждого ТекСтрока Из СоответствиеКолонок Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.КолонкаСУБД) Тогда
			Продолжить;
		КонецЕсли;
		ТекСтрока.Вставить("ТипСУБД", "");
		ТекСтрока.Вставить("ТипСУБДДлина", NULL);
		ТекСтрока.Вставить("ТипСУБДТочность", NULL);
		ТекСтрока.Вставить("ТипСУБДВозможноПусто", Истина);
		
		ТекОписание = СоответствиеОписаний[ВРег(ТекСтрока.КолонкаСУБД)];
		Если ТекОписание = Неопределено Тогда
			СоответствиеОписаний.Вставить(ВРег(ТекСтрока.КолонкаСУБД), Новый Массив());
			ТекОписание = СоответствиеОписаний[ВРег(ТекСтрока.КолонкаСУБД)];
		КонецЕсли;
		ТекОписание.Добавить(ТекСтрока);
		
		ДобавитьОписаниеТиповПолейКлюча(ТекСтрока, СоответствиеОписаний);
		
	КонецЦикла;
	
	Пока РезультатЗапроса.EOF = 0 Цикл
			
		ОписаниеТипаКолонки = Новый Структура("tablename, name, datatype, lenght, scale, nullable");
		
		Для Каждого ТекКолонка Из РезультатЗапроса.Fields Цикл
			ОписаниеТипаКолонки[ТекКолонка.Name] = ТекКолонка.Value;
		КонецЦикла;
		
		ОписаниеТипаСтрокой = ОписаниеТипаКолонки.datatype;
		Если НЕ (ОписаниеТипаКолонки.lenght = NULL ИЛИ ОписаниеТипаКолонки.lenght = 0) И НЕ ВРег(ОписаниеТипаКолонки.datatype) = ВРег("int") Тогда
			ОписаниеТипаСтрокой = ОписаниеТипаСтрокой + "(" + Формат(ОписаниеТипаКолонки.lenght, "ЧН=0; ЧГ=");
			Если НЕ ОписаниеТипаКолонки.scale = NULL Тогда
				ОписаниеТипаСтрокой = ОписаниеТипаСтрокой + ", " + Формат(ОписаниеТипаКолонки.scale, "ЧН=0; ЧГ=");
			КонецЕсли;
			ОписаниеТипаСтрокой = ОписаниеТипаСтрокой + ")";
			Если ОписаниеТипаКолонки.datatype = "varchar"  И ОписаниеТипаКолонки.lenght = -1 Тогда
				ОписаниеТипаСтрокой = "varchar(max)";
			КонецЕсли;
		КонецЕсли;
			
		РезультатЗапроса.MoveNext();
		
		Если ВРег(ОписаниеТипаКолонки.tablename) = ВРег(ТаблицаДляОбновления) Тогда
			ТекОписание = СоответствиеОписаний[ВРег(ОписаниеТипаКолонки.name)];
			Если ТекОписание = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ТекОписание[0].ТипСУБД				= ОписаниеТипаСтрокой;
			ТекОписание[0].ТипСУБДДлина			= ОписаниеТипаКолонки.lenght;
			ТекОписание[0].ТипСУБДТочность		= ОписаниеТипаКолонки.scale;
			ТекОписание[0].ТипСУБДВозможноПусто	= ?(ВРег(ОписаниеТипаКолонки.nullable) = ВРег("NO"), Ложь, Истина);
		Иначе
			ТекОписание = СоответствиеОписаний[ВРег(ОписаниеТипаКолонки.tablename + "." + ОписаниеТипаКолонки.name)];
			Если ТекОписание = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого ТекЭлемент Из ТекОписание Цикл
				ТекЭлемент.ТипСУБД				= ОписаниеТипаСтрокой;
				ТекЭлемент.ТипСУБДДлина			= ОписаниеТипаКолонки.lenght;
				ТекЭлемент.ТипСУБДТочность		= ОписаниеТипаКолонки.scale;
				ТекЭлемент.ТипСУБДВозможноПусто	= ?(ВРег(ОписаниеТипаКолонки.nullable) = ВРег("NO"), Ложь, Истина);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры //ДополнитьОписаниеКолонокОписаниемТипов()

// Функция - Вычисляет выражение на языке 1С для строки таблицы
//
// Параметры:
//  ТекущаяСтрока				 - СтрокаТаблицыЗначений	 - Строка, для которой будет вычеслено выражение
//  Выражение					 - Строка					 - Код на языке 1С
//  ТекстОшибки					 - Строка					 - Описание возникшей ошибки
// 
// Возвращаемое значение:
//		Произвольный		- Результат вычисления выражения
//
Функция ВычислитьВыражениеДляПоля(ТекущаяСтрока, Выражение, ТекстОшибки = "") Экспорт
	
	Результат = "";
	
	Попытка
		Выполнить("Результат = " + Выражение);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции //ВычислитьВыражениеДляПоля()
	
// Функция - Выполняет преобразование значение для СУБД в зависимости от типа колонки СУБД
//
// Параметры:
//  Значение					 - Произвольный			 - Преобразуемое значение
//  ОписаниеТипаКолонки			 - Структура			 - Описание типа колонок таблицы внешней СУБД
//		ТипСУБД						 - Строка			 - Тип колонки таблицы СУБД-приемника
//		ТипСУБДДлина				 - Число			 - Длина значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДТочность				 - Число			 - Точность значения колонки таблицы СУБД-приемника (если применимо для указанного типа)
//		ТипСУБДВозможноПусто		 - Булево			 - Истина - Возможно значение NULL в колонке таблицы СУБД-приемника;
//														   Ложь - в противном случае
// 
// Возвращаемое значение:
//		Строка				- Преобразованное и отформатированное значение
//
Функция ПреобразоватьЗначениеДляСУБД(Знач Значение, ОписаниеТипаКолонки) Экспорт
	
	Кавычки = "";
	
	ТипСУБД					= ОписаниеТипаКолонки.ТипСУБД;
	ТипСУБДДлина			= ОписаниеТипаКолонки.ТипСУБДДлина;
	ТипСУБДВозможноПусто	= ОписаниеТипаКолонки.ТипСУБДВозможноПусто;
	
	Если Значение = NULL Тогда
		Значение = "NULL";
	ИначеЕсли ВРег(Лев(ТипСУБД, 3)) = ВРег("int") Тогда
		Значение = Формат(Значение, "ЧРД=.; ЧН=; ЧГ=");
	ИначеЕсли ВРег(Лев(ТипСУБД, 7)) = ВРег("decimal") Тогда
		Значение = Формат(Значение, "ЧРД=.; ЧН=; ЧГ=");
	ИначеЕсли ВРег(Лев(ТипСУБД, 7)) = ВРег("bit") Тогда
		Значение = ?(ЗначениеЗаполнено(Значение) И НЕ (Значение = 0 ИЛИ Значение = "0"), 1, 0);
	ИначеЕсли ВРег(Лев(ТипСУБД, 7)) = ВРег("varchar")
		  ИЛИ ВРег(Лев(ТипСУБД, 8)) = ВРег("nvarchar") Тогда
		Кавычки = "'";
		
		Значение = ?(СтрДлина(Значение) > ТипСУБДДлина, Сред(Значение, 1, ТипСУБДДлина), Значение);
		Значение = СтрЗаменить(СокрЛП(Значение), "'", "''");
		Значение = СтрЗаменить(СокрЛП(Значение), Символы.Таб, "    ");
		Значение = СтрЗаменить(СокрЛП(Значение), Символы.ПС, " ");
		Значение = СтрЗаменить(СокрЛП(Значение), Символы.ВК, "");
	ИначеЕсли ВРег(Лев(ТипСУБД, 4)) = ВРег("date") Тогда
		Кавычки = ?(ЗначениеЗаполнено(Значение) ИЛИ НЕ ТипСУБДВозможноПусто, "'", "");
		Значение = ?(ЗначениеЗаполнено(Значение) ИЛИ НЕ ТипСУБДВозможноПусто, Формат(Значение, "ДФ=гггг-ММ-ддTЧЧ:мм:сс; ДП=" ), "NULL");
	Иначе
		Кавычки = "'";
		Значение = СтрЗаменить(СокрЛП(Значение), "'", "''");
		Значение = СтрЗаменить(СокрЛП(Значение), Символы.Таб, "    ");
		Значение = СтрЗаменить(СокрЛП(Значение), Символы.ПС, " ");
		Значение = СтрЗаменить(СокрЛП(Значение), Символы.ВК, "");
	КонецЕсли;
	
	Возврат Кавычки + Значение + Кавычки;
	
КонецФункции //ПреобразоватьЗначениеДляСУБД()

#КонецОбласти
