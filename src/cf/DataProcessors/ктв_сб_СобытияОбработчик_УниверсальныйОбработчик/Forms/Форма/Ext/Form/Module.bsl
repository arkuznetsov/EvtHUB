#Область ПрограммныйИнтерфейс

// Функция - Выполняет обработчик события
//
// Параметры:
//  ТочкаВозникновения	 - СправочникСсылка.ктв_сб_СобытияТочкиВозникновения	- Точка (ИБ), где возникло событие
//  ИдСобытия			 - Строка											- Уникальный идентификатор события
//  Источник			 - ЛюбаяСсылка										- Источник возникновения события
//  Дата				 - Дата												- Дата и время возникновения события
//  Момент				 - Число											- Момет возникновения события в миллисекундах
//  Событие				 - СправочникСсылка.ктв_сб_События						- Возникшее событие
//  Обработчик			 - СправочникСсылка.ктв_сб_СобытияОбработчики			- Обработчик события
//  ПараметрыСобытия	 - Структура										- Параметры, сформированные при возникновении события
// 
// Возвращаемое значение:
//  Булево - Истина - Обработка выполнена успешно, Ложь - в противном случае
//
&НаКлиенте
Функция ОбработатьСобытие(ТочкаВозникновения
						, ИдСобытия
						, Источник
						, Дата
						, Момент
						, Событие
						, Обработчик
						, ПараметрыСобытия) Экспорт
	
	Результат = Ложь;
	
	ИсполняемыйКод = ОбработкаНаКлиенте_Код;
	
	Если ИсполняемыйКод = "" Тогда
		Возврат Результат;
	КонецЕсли;
	
	Попытка
		Выполнить(ИсполняемыйКод);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Если НЕ ПараметрыСобытия.Свойство("ТекстОшибки") Тогда
			ПараметрыСобытия.Вставить("ТекстОшибки", "");
		КонецЕсли;
		ПараметрыСобытия.ТекстОшибки = ПараметрыСобытия.ТекстОшибки
									 + ?(ЗначениеЗаполнено(ПараметрыСобытия.ТекстОшибки), Символы.ПС, "")
									 + ТекстОшибки;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции //ОбработатьСобытие()

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаНаСервере_Код	= "";
	ОбработкаНаКлиенте_Код	= "";
	ОбработкаПолучениеПользователей_Код	= "";
	
	Если Параметры.Свойство("ОбработкаНастройкиАдресВХранилище") Тогда
		ОбработкаНастройкиАдресВХранилище = Параметры.ОбработкаНастройкиАдресВХранилище;
	
		Настройки = ПолучитьИзВременногоХранилища(ОбработкаНастройкиАдресВХранилище);
	
		Если ТипЗнч(Настройки) = Тип("Структура") Тогда
			Настройки.Свойство("ОбработкаНаСервере_Код"				, ОбработкаНаСервере_Код);
			Настройки.Свойство("ОбработкаНаКлиенте_Код"				, ОбработкаНаКлиенте_Код);
			Настройки.Свойство("ОбработкаПолучениеПользователей_Код", ОбработкаПолучениеПользователей_Код);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьНастройку(Команда)
	
	СохранитьНастройкуНаСервере();
	
	Оповестить("ИзмененыНастройки", ЭтаФорма.ВладелецФормы, ЭтаФорма);
	
	Закрыть("ИзмененыНастройки");
	
КонецПроцедуры //СохранитьНастройку()

&НаСервере
Процедура СохранитьНастройкуНаСервере()
	
	Настройка = Новый Структура();
	Настройка.Вставить("ОбработкаНаСервере_Код"				, ОбработкаНаСервере_Код);
	Настройка.Вставить("ОбработкаНаКлиенте_Код"				, ОбработкаНаКлиенте_Код);
	Настройка.Вставить("ОбработкаПолучениеПользователей_Код", ОбработкаПолучениеПользователей_Код);
	
	ПоместитьВоВременноеХранилище(Настройка, ОбработкаНастройкиАдресВХранилище);
	
КонецПроцедуры //СохранитьНастройкуНаСервере()

#КонецОбласти
