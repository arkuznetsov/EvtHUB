////////////////////////////////////////////////////////////////////////////////
// Подсистема "Обработка событий (EventHUB)". (Клиент)
//
////////////////////////////////////////////////////////////////////////////////


#Область ОбработкаСобытий

// Функция - Получает форму обработки обслуживания обработчика события
//
// Параметры:
//  Обработчик			 - СправочникСсылка.				- Элемент справочника "Обработчики событий", для которого получаем форму обработки
//							ктв_сб_СобытияОбработчики
//  ИмяФормы			 - Строка							- Имя получаемой формы обработки обслуживания
//  ПараметрыОткрытия	 - Структура						- Параметры, передаваемые в форму обработки при создании
//  Владелец			 - УправляемаяФорма, ЭлементФормы	- Владелец формы обработки
// 
// Возвращаемое значение:
//  УправляемаяФорма - Созданная форма обработки обслуживания
//
Функция ПолучитьФормуОбработчикаСобытия(Обработчик, ИмяФормы = "", ПараметрыОткрытия = Неопределено, Владелец = Неопределено) Экспорт
	
	ОписаниеОбработчика = ктв_сб_СобытияВызовСервера.ПолучитьОписаниеОбработчикаСобытий(Обработчик);
	
	ИмяОбработки = "ОбработкаСобытия_" + СтрЗаменить(ОписаниеОбработчика.Ид, "-", "_");
	
	АдресОбработки = ?(ОписаниеОбработчика.ОбработкаВнешняя,
					   ПолучитьНавигационнуюСсылку(Обработчик, "Обработка"),
					   ОписаниеОбработчика.ОбработкаИмяВстроенной);
	
	Возврат ктв_сб_ОбработкиОбслуживанияКлиент.ПолучитьФормуОбработкиОбслуживания(АдресОбработки
																			 , ИмяОбработки
																			 , ИмяФормы
																			 , ПараметрыОткрытия
																			 , Владелец);
	
КонецФункции //ПолучитьФормуОбработчикаСобытия()
	
#КонецОбласти 

#Область СлужебныеПроцедуры

Процедура ПриНачалеРаботыСистемы() Экспорт
	
	//Раскомментировать если нужно обрабатывать события на клиенте
	ПодключитьОбработчикОжидания("ОбработкаОжиданияСобытийНаКлиенте", 10, Ложь);
	ПодключитьОбработчикОповещения("ОбработкаСобытийНаКлиенте");
	
КонецПроцедуры

#КонецОбласти 
